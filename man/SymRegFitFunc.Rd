% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/symreg.R
\name{SymRegFitFunc}
\alias{SymRegFitFunc}
\title{Evaluate the Fitness of a Symbolic Regression Expression}
\usage{
SymRegFitFunc(expr)
}
\arguments{
\item{expr}{A character string representing a mathematical expression to be evaluated.
The expression should reference variables present in the dataset (`data`).}
}
\value{
A numeric value representing the fitness (cost) of the expression.
        Lower values indicate better fitness, while `Inf` is returned if the result contains `NaN` values.
}
\description{
This function evaluates the fitness of a given expression in the context of symbolic regression.
The function calculates the mean log error between the predicted values (evaluated from the expression)
and the known entropy values in the dataset.
}
\details{
The function first evaluates the given expression using `eval(parse(text = expr))`.
If the evaluation results in any `NaN` values, the function returns `Inf`, indicating an invalid solution.
Otherwise, the function computes the mean log error using:
\deqn{\text{cost} = \text{mean}(\log(1 + | \text{data\$entropy} - \text{result} |))}
}
\examples{
\dontrun{
  data <- generate_distribution_metrics(10, 1000000, "normal")

  expr <- "log(data$b - log(exp(data$a)))"
  cost <- SymRegFitFunc(expr)
  print(cost)
}

}
