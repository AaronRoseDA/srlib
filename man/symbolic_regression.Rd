% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/symreg.R
\name{symbolic_regression}
\alias{symbolic_regression}
\title{Perform Symbolic Regression using Grammatical Evolution}
\usage{
symbolic_regression(
  data,
  termination_cost = 0.05,
  optimizer = "es",
  iterations = 3e+06,
  seed = 2
)
}
\arguments{
\item{data}{A data frame containing at least the following columns:
`"mu"`, `"sigma"`, `"xbar"`, and `"entropy"`.}

\item{termination_cost}{A numeric value specifying the termination cost for the evolution process (default: 0.05).}

\item{optimizer}{A string specifying the optimization algorithm to use (default: `"es"`).}

\item{iterations}{An integer specifying the number of iterations for the evolution process (default: 3e6).}

\item{seed}{An integer used for random number generation to ensure reproducibility (default: 2).}
}
\value{
A list containing:
        - `best_expression`: The best mathematical expression found.
        - `runtime`: Execution time of the symbolic regression process.
        - `iterations`: The number of iterations performed.
        - `optimizer`: The optimization method used.
}
\description{
This function applies symbolic regression to find an optimal mathematical expression
that approximates entropy based on input variables using grammatical evolution.
}
\examples{
# Generate sample data
sample_data <- data.frame(
  mu = runif(100, 1, 10),
  sigma = runif(100, 1, 5),
  xbar = rnorm(100, 5, 2),
  entropy = rexp(100, rate = 0.5)
)

# Perform symbolic regression
result <- symbolic_regression(sample_data)

# View best expression found
print(result$best_expression)

}
