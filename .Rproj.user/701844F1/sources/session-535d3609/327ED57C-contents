rm(list = ls())

library(moments)  # For skewness calculation

# setwd("C:/Users/arose/OneDrive - Ortho Molecular Products/Desktop/SR_LogDistributions")

# Function to calculate entropy of a log-normal distribution
logNormalEntropy <- function(std_dev, mean_val) {
  # Formula: Entropy = log(sigma * exp(mu + 1/2) * sqrt(2 * pi))
  return(log(std_dev * exp(mean_val + 1 / 2) * sqrt(2 * pi)))
}

# Initialize dataframe
results_df <- data.frame(
  distNbr = numeric(),      # Distribution ID
  distType = character(),   # Type of distribution
  mu = numeric(),           # Mean (mu) of underlying normal distribution
  sigma = numeric(),        # Std dev (sigma) of underlying normal distribution
  n = numeric(),            # Number of samples
  xbar = numeric(),         # Sample mean (log scale)
  std = numeric(),          # Sample standard deviation (log scale)
  skew = numeric(),         # Sample skewness (log scale)
  entropy = numeric()       # Calculated entropy
)

# Parameters for distribution generation
num_distributions <- 1000   # Number of log-normal distributions to generate
samples_per_dist <- 500     # Number of samples per distribution

# Generate random parameters (mu and sigma) for each distribution
set.seed(123456789)

param_mu <- log(runif(n = num_distributions, min = 1, max = 100))
param_sigma <- log(runif(n = num_distributions, min = 1, max = 10))

# Loop through each distribution and generate metrics
for (i in 1:num_distributions) {
  # i = 1
  # Generate log-normal samples for the current distribution
  sample_data <- rlnorm(samples_per_dist, meanlog = param_mu[i], sdlog = param_sigma[i])

  # Calculate metrics on the log-transformed sample
  sample_mean <- mean(log(sample_data))       # Sample mean (log scale)
  sample_std <- sd(log(sample_data))          # Sample standard deviation (log scale)
  sample_skew <- skewness(log(sample_data))   # Skewness of log-transformed data
  sample_entropy <- logNormalEntropy(sample_std, sample_mean)  # Calculate entropy

  # Append the metrics to the dataframe
  dist_metrics <- data.frame(
    distNbr = i,
    distType = "Log Normal",
    mu = param_mu[i],
    sigma = param_sigma[i],
    n = samples_per_dist,
    xbar = sample_mean,
    std = sample_std,
    skew = sample_skew,
    entropy = sample_entropy
  )
  if (is.na(sample_skew)){
    results_df <- rbind(results_df, dist_metrics)
    break
  }

  # Add the current iteration data to the main dataframe
  results_df <- rbind(results_df, dist_metrics)
}

# Write the resulting dataframe to a CSV file
write.csv(results_df,
          "C:/Users/arose/OneDrive - Ortho Molecular Products/Desktop/SR_LogDistributions/logNormalDist.csv",
          row.names = FALSE)








